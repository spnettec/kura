name=Container Instance
description=Allows for the creation of containers.
containerEnabled=Enabled
containerEnabledDesc=Enables this container
containerImage=Image name
containerImageDesc=The image the container will be created with. The value will need to be expressed in the form registryURL/imagename in case of a custom registry. Please fill the following registry credentials in case of pulling from a custom or authenticated Docker hub registry.
containerImageTag=Image tag
containerImageTagDesc=Describes which image version that should be pulled from the container registry.
registryHostname=Authentication Registry URL
registryHostnameDesc=Url for docker registry. Required only for authenticated registries
registryUsername=Authentication Username
registryUsernameDesc=Username for container registry. Required only for authenticated registries
registryPassword=Password
registryPasswordDesc=Password for container registry. Required only for authenticated registries
containerImageDownloadRetries=Image Download Retries
containerImageDownloadRetriesDesc=The number of retries to pull the container image. Set to 0 for unlimited retries
containerImageDownloadInterval=Image Download Retry Interval
containerImageDownloadIntervalDesc=The interval (in milliseconds) between retries to pull the container image
containerImageDownloadTimeout=Image Download Timeout
containerImageDownloadTimeoutDesc=Image download timeout. Value specified in seconds
containerPortsInternal=Internal ports
containerPortsInternalDesc=A comma-separated list of ports. If no protocol is specified tcp will be used. Note, the number of internal ports must be equal to the number of external ports. A port internet protocol can also be specified with a colon and text after the port number. Example: 80, 443:udp, 8080:tcp.
containerPortsExternal=External ports
containerPortsExternalDesc=A comma separated list of ports. Note, the number of external ports must be equal to the number of internal ports. Example: 8080, 443.
containerPrivileged=Privileged Mode
containerPrivilegedDesc=Give the container privileged access. (Warning: use this option at your own risk as privileged containers can be dangerous)
containerEnv=Environment Variables
containerEnvDesc=Additional container enviroment variables. Example: example_var_1=123, example_var_2=123.
containerVolume=Volume Mount
containerVolumeDesc=The path on the container at which you would like to mount a file or folder. Example: /path/on/host1:/path/on/container1, /path/on/host2:/path/on/container2.
entrypointOverride=Entrypoint Override
entrypointOverrideDesc=Comma separated list which is used to override the command used to start a container. Example: ./test.sh,-v,-d,--human-readable
containerMemory=Memory
containerMemoryDesc=The maximum amount of memory the container can use in bytes. Set it as a positive integer, optionally followed by a suffix of b, k, m, g, to indicate bytes, kilobytes, megabytes, or gigabytes. The minimum allowed value is platform dependent (i.e. 6m). If left empty, the memory assigned to the container will be set to a default value by the native container orchestrator.
containerCpus=CPUs
containerCpusDesc=Specify how many CPUs a container can use. Decimal values are allowed, so if set to 1.5, the container will use at most one and a half cpu resource.
containerGpus=GPUs
containerGpusDesc=Specify how many Nvidia GPUs a container can use. Allowed values are 'all' or an integer number. If there's no Nvidia GPU installed, leave the field empty.
containerDevice=Peripheral Device
containerDeviceDesc=Used to pass physical devices to a container. Example: /dev/gpiomem, /dev/ttyUSB0. (Generally Requires privileged mode to be enabled)
containerNetworkingMode=Networking Mode
containerNetworkingModeDesc=Used to specify what networking mode the container will use. Possible Drivers: bridge, none, container:{container id}, host. Note: This field is case-sensitive." type="String
containerLoggingType=Logger Type
containerLoggingTypeDesc=Used to specify what logging driver the container will use. By default, containers will log to a JSON-FILE on the gateway.
containerLoggerParameters=Logger Parameters
containerLoggerParametersDesc=Used to pass logger parameters to a container's logging driver. Example: max-size=10m, max-file=2.
containerRestartOnfailure=Restart Container On Failure
containerRestartOnfailureDesc=Automatically restart the container when it has failed.