name=Container Instance
description=Allows for the creation of containers.
containerEnabled=Enabled
containerEnabledDesc=Enables this container
containerImage=Image name
containerImageDesc=The image the container will be created with. The value will need to be expressed in the form registryURL/imagename in case of a custom registry. Please fill the following registry credentials in case of pulling from a custom or authenticated Docker hub registry.
containerImageTag=Image tag
containerImageTagDesc=Describes which image version that should be pulled from the container registry.
registryHostname=Authentication Registry URL
registryHostnameDesc=Url for docker registry. Required only for authenticated registries
registryUsername=Authentication Username
registryUsernameDesc=Username for container registry. Required only for authenticated registries
registryPassword=Password
registryPasswordDesc=Password for container registry. Required only for authenticated registries
containerImageDownloadRetries=Image Download Retries
containerImageDownloadRetriesDesc=The number of retries to pull the container image. Set to 0 for unlimited retries
containerImageDownloadInterval=Image Download Retry Interval
containerImageDownloadIntervalDesc=The interval (in milliseconds) between retries to pull the container image
containerImageDownloadTimeout=Image Download Timeout
containerImageDownloadTimeoutDesc=Image download timeout. Value specified in seconds
containerPortsInternal=Internal ports
containerPortsInternalDesc=A comma separated list of ports. Note, the number of internal ports must be equal to the number of external ports. Example: 80, 443.
containerPortsExternal=External ports
containerPortsExternalDesc=A comma separated list of ports. Note, the number of external ports must be equal to the number of internal ports. Example: 8080, 443.
containerPrivileged=Privileged Mode
containerPrivilegedDesc=Give the container privileged access. (Warning: use this option at your own risk as privileged containers can be dangerous)
containerEnv=Environment Variables
containerEnvDesc=Additional container enviroment variables. Example: example_var_1=123, example_var_2=123.
containerVolume=Volume Mount
containerVolumeDesc=The path on the container at which you would like to mount a file or folder. Example: /path/on/host1:/path/on/container1, /path/on/host2:/path/on/container2.
entrypointOverride=Entrypoint Override
entrypointOverrideDesc=Comma separated list which is used to override the command used to start a container. Example: ./test.sh,-v,-d,--human-readable
containerDevice=Peripheral Device
containerDeviceDesc=Used to pass physical devices to a container. Example: /dev/gpiomem, /dev/ttyUSB0. (Generally Requires privileged mode to be enabled)
containerNetworkingMode=Networking Mode
containerNetworkingModeDesc=Used to specify what networking mode the container will use. Possible Drivers: bridge, none, container:{container id}, host
containerLoggingType=Logger Type
containerLoggingTypeDesc=Used to specify what logging driver the container will use. By default, containers will log to a JSON-FILE on the gateway.
containerLoggerParameters=Logger Parameters
containerLoggerParametersDesc=Used to pass logger parameters to a container's logging driver. Example: max-buffer-size=4m, labels=location.